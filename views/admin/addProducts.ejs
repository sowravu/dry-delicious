<%- include("../layouts/admin/header.ejs") %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  <style>
    .additional-fields {
      display: none;
      margin-top: 10px;
    }
  </style>

  <%- include("../layouts/admin/navbar.ejs") %>
    <main class="main-wrap">
      <%- include("../layouts/admin/topnav.ejs") %>


        <section class="content-main">
          <div class="row">
            <div class="col-9">
              <div class="content-header">
                <h2 class="content-title">Add New Product</h2>



                <form action="/admin/add-products" method="post" onsubmit="return validate()"
                  enctype="multipart/form-data">
                  <div>
                    <button type="submit" class="btn btn-md rounded font-sm hover-up">
                      Publish
                    </button>
                  </div>

              </div>
            </div>

            <div class="col-lg-6">
              <div class="card mb-4">
                <div class="card-header">
                  <h4>Basic</h4>
                </div>

                <div class="card-body">
                  <div class="mb-4">
                    <label for="productname" class="form-label">Product Name</label>
                    <input name="productname" type="text" placeholder="Enter product name" class="form-control"
                      id="productname" />
                    <span id="errorname" class="text-danger"></span>
                  </div>

                  <div class="mb-4">
                    <label class="form-label">Full description</label>
                    <textarea name="productDis" id="productdis" placeholder="Type here" class="form-control"
                      rows="4"></textarea>
                    <span id="errordis" class="text-danger"></span>
                  </div>

                  <label class="form-label">Select weigth:</label>
                  <br /><br />
                  <div class="container mt-4">
                    <div class="row">
                      <div class="col-lg-4">
                        <div class="mb-4">
                          <input type="radio" name="weigth" id="sm" value="SM" />
                          <label for="">250gm</label>
                        </div>
                      </div>
                      <div class="col-lg-4">
                        <div class="mb-4">
                          <input type="radio" name="weigth" id="medium" value="Medium" />
                          <label for="medium">500gm</label>
                        </div>
                      </div>
                      <div class="col-lg-4">
                        <input type="radio" name="weigth" id="l" value="L" />
                        <label for="l">1kg</label>
                      </div>
                    </div>

                    <div id="additionalFieldsSM" class="additional-fields">
                      <h5>250 Gm</h5>
                      <div class="form-group">
                        <label for="stockSM">Stock:</label>
                        <input type="number" id="stockSM" name="weigth[SM][stock]" class="form-control" min="0"
                          placeholder="Enter stock count" />
                      </div>

                      <div class="form-group">
                        <label for="salesPriceSM">Sales Price:</label>
                        <input type="number" id="salesPriceSM" name="weigth[SM][salesPrice]" class="form-control"
                          step="0.01" placeholder="Enter sales price" />
                      </div>
                    </div>

                    <div id="additionalFieldsMedium" class="additional-fields">
                      <h5>500 gm</h5>
                      <div class="form-group">
                        <label for="stockMedium">Stock:</label>
                        <input type="number" id="stockMedium" name="weigth[Medium][stock]" class="form-control" min="0"
                          placeholder="Enter stock count" />
                      </div>

                      <div class="form-group">
                        <label for="salesPriceMedium">Sales Price:</label>
                        <input type="number" id="salesPriceMedium" name="weigth[Medium][salesPrice]"
                          class="form-control" step="0.01" placeholder="Enter sales price" />
                      </div>
                    </div>

                    <div id="additionalFieldsL" class="additional-fields">
                      <h5>1 Kg</h5>
                      <div class="form-group">
                        <label for="stockL">Stock:</label>
                        <input type="number" id="stockL" name="weigth[L][stock]" class="form-control" min="0"
                          placeholder="Enter stock count" />
                      </div>

                      <div class="form-group">
                        <label for="salesPriceL">Sales Price:</label>
                        <input type="number" id="salesPriceL" name="weigth[L][salesPrice]" class="form-control"
                          step="0.01" placeholder="Enter sales price" />
                      </div>
                    </div>
                  </div>


                </div>
              </div>
            </div>

            <div class="col-lg-3">
              <div class="card mb-4">
                <div class="card-header">
                  <h4>Media</h4>
                </div>
                <div class="input-upload">
                  <label for="image" class="form-label">Upload Images</label>
                  <input type="file" name="productimage" class="form-control" id="image" multiple
                    onchange="handleFiles(event)" />
                  <div id="imagePreview" class="mt-3"></div>
                  <span id="errorimage" class="text-danger"></span>
                </div>

                <div id="cropModal" style="display: none">
                  <img id="croppingImage" style="max-width: 100%" />
                  <button type="button" id="cropButton" onclick="cropImage()">
                    Crop Image
                  </button>
                </div>

                <div class="card mb-4">
                  <div class="card-header">
                    <h4>Brand & Category</h4>
                  </div>
                  <div class="card-body">
                    <div class="row gx-2">
                      <div class="col-sm-6 mb-3">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="productcategory">
                          <option value="">Select a Category</option>
                        
                          <% for(let i=0; i < cat.length; i++) { %>
                                         
                                  <% if(cat[i].isDelete==false) { %>
                            
                            <option value="<%= cat[i]._id %>">
                              <%= cat[i].categoryName %>
                            </option>
                            <%}%>
                            <% } %>
                        </select>
                      </div>


                      <div class="col-sm-6 mb-3">
                        <label class="form-label">Brand</label>
                        <select class="form-select" name="productbrand">
                          <option value="">Select a Brand</option>
                          <% for(let i=0; i < brand.length; i++) { %>
                                <% if(brand[i].isActive==true) { %>
                            <option value="<%= brand[i]._id %>">
                              
                              <%= brand[i].brandname %>
                            </option>
                            <% } %>
                            <% } %>
                        </select>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            </form>
          </div>
        </section>
    </main>
    <%- include("../layouts/admin/footer.ejs") %>


      <script>
        const radios = document.querySelectorAll('input[name="weigth"]');

        const additionalFieldsSM = document.getElementById("additionalFieldsSM");
        const additionalFieldsMedium = document.getElementById("additionalFieldsMedium");
        const additionalFieldsL = document.getElementById("additionalFieldsL");


        radios.forEach((radio) => {
          radio.addEventListener("change", () => {
            additionalFieldsSM.style.display = "none";
            additionalFieldsMedium.style.display = "none";
            additionalFieldsL.style.display = "none";

            if (radio.value === "SM") {
              additionalFieldsSM.style.display = "block";
            } else if (radio.value === "Medium") {
              additionalFieldsMedium.style.display = "block";
            } else if (radio.value === "L") {
              additionalFieldsL.style.display = "block";
            }
          });
        });

        function validate() {
          let isValid = true;

          const name = document.getElementById("productname").value.trim();
          if (name.length < 4) {
            document.getElementById("errorname").innerText = "Name must be at least 4 characters long";
            isValid = false;
          } else {
            document.getElementById("errorname").innerText = "";
          }

          const description = document.getElementById("productdis").value.trim();
          if (description.length < 10) {
            document.getElementById("errordis").innerText = "Description is required";
            isValid = false;
          } else {
            document.getElementById("errordis").innerText = "";
          }

          const images = document.getElementById("image").files;
          const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.WEBP)$/i;
          if (images.length === 0) {
            document.getElementById("errorimage").innerText = "At least one image must be uploaded";
            isValid = false;
          } else {
            for (let i = 0; i < images.length; i++) {
              if (!allowedExtensions.exec(images[i].name)) {
                document.getElementById("errorimage").innerText = "Only .jpg, .jpeg, .png ,.WEBP files are allowed";
                isValid = false;
                break;
              } else {
                document.getElementById("errorimage").innerText = "";
              }
            }
          }

          // Prevent form submission if not valid
          return isValid;
        }


        let cropper;
        let currentFile;
        let currentImgElement;
        let croppedImages = [];
        function handleFiles(event) {
          const imagePreviewContainer = document.getElementById("imagePreview");
          imagePreviewContainer.innerHTML = "";
          croppedImages = [];
          const files = event.target.files;

          if (files) {
            Array.from(files).forEach((file) => {
              const reader = new FileReader();

              reader.onload = (e) => {
                currentFile = file;
                const img = document.createElement("img");
                img.src = e.target.result;
                img.style.width = "100px";
                img.style.marginRight = "10px";
                img.style.cursor = "pointer";
                img.onclick = () => openCropper(e.target.result, img, file);
                imagePreviewContainer.appendChild(img);
              };

              reader.readAsDataURL(file);
            });
          }
        }

        function openCropper(imageSrc, imgElement, file) {
          const cropModal = document.getElementById("cropModal");
          const croppingImage = document.getElementById("croppingImage");

          currentImgElement = imgElement;
          currentFile = file

          croppingImage.src = imageSrc;
          cropModal.style.display = "block";

          if (cropper) {
            cropper.destroy();
          }

          cropper = new Cropper(croppingImage, {
            aspectRatio: 1,
            viewMode: 2,
          });
        }

        function cropImage() {
          const canvas = cropper.getCroppedCanvas();

          canvas.toBlob((blob) => {
            const croppedFile = new File([blob], currentFile.name, { type: 'image/png' });


            croppedImages.push(croppedFile); // Add the cropped image to the array

            const dataTransfer = new DataTransfer();

            croppedImages.forEach((image) => {
              dataTransfer.items.add(image);
            });

            const fileInput = document.getElementById('image');
            fileInput.files = dataTransfer.files;


            currentImgElement.src = URL.createObjectURL(croppedFile);


            document.getElementById("cropModal").style.display = "none";


            cropper.destroy();
            cropper = null;
          }, 'image/png');
        }

      </script>
      </body>

      </html>